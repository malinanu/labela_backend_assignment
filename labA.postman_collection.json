{
	"info": {
		"_postman_id": "049abbe7-3bde-4ab1-b741-5507214769b6",
		"name": "labA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26844759"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.token).to.exist.and.to.be.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Token should not be empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.token).to.exist.and.to.not.be.empty;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"// Stores the token in an environment or global variable\r",
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"token\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"Malin\",\r\n  \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}api-token-auth/",
					"host": [
						"{{base_url}}api-token-auth"
					],
					"path": [
						""
					]
				},
				"description": "This endpoint is used to authenticate a user and obtain an API token. It is an HTTP POST request to localhost:8000/api-token-auth/. The request body should be in raw format with JSON payload containing the username and password.\n\n### Request Body\n\n- `username` (string): The username of the user.\n- `password` (string): The password of the user.\n    \n\n### Response\n\nUpon successful authentication, the server responds with a status code of 200 and a JSON object containing the API token.\n\nExample Response:\n\n``` json\n{\n    \"token\": \"your-api-token\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "get_items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Token 1a109a351261fa76136e96fe0c5f3f8b1b79a123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    Authorization:1a109a351261fa76136e96fe0c5f3f8b1b79a123\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}item/",
					"host": [
						"{{base_url}}item"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    Authorization:1a109a351261fa76136e96fe0c5f3f8b1b79a123\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}order/",
					"host": [
						"{{base_url}}order"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "post_order_item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"item\": \"fa4d51fb-c5a1-4eb4-a782-147b9a8ef377\",\r\n  \"quantity\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}order/",
					"host": [
						"{{base_url}}order"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_one_item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "1a109a351261fa76136e96fe0c5f3f8b1b79a123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    Authorization:1a109a351261fa76136e96fe0c5f3f8b1b79a123\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}item/",
					"host": [
						"{{base_url}}item"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "cart",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000/",
			"type": "string"
		},
		{
			"key": "Authorization",
			"value": "Token 1a109a351261fa76136e96fe0c5f3f8b1b79a123",
			"type": "string"
		}
	]
}